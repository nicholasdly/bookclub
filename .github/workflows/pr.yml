name: Pull request pipeline

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  pull_request:
    branches:
      - main

jobs:

  pre-build:
    name: Pre-build checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install
      - name: Typecheck
        run: npm run typecheck
      - name: Lint
        run: npm run lint
      - name: Formatter
        run: npm run format:check

  # TODO: Tests

  database:
    name: Create Neon preview branch
    runs-on: ubuntu-latest
    needs: [pre-build]
    outputs:
      DATABASE_URL: ${{ steps.create-branch.outputs.db_url }}
    steps:
      - name: Create Neon branch
        uses: neondatabase/create-branch-action@v5
        id: create-branch
        with:
          branch_name: preview/${{ github.head_ref }}
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          database: ${{ secrets.NEON_DATABASE_NAME }}
          username: ${{ secrets.NEON_DATABASE_ROLE_NAME }}
          api_key: ${{ secrets.NEON_API_KEY }}

  migrations:
    name: Migrations
    runs-on: ubuntu-latest
    needs: [pre-build, database]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install
      - name: Apply migrations
        run: npm run db:migrate
        env:
          DATABASE_URL: ${{ needs.database.outputs.DATABASE_URL }}

  seed:
    name: Seed
    runs-on: ubuntu-latest
    needs: [pre-build, database, migrations]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install
      - name: Run seed script
        run: npm run db:seed
        env:
          DATABASE_URL: ${{ needs.database.outputs.DATABASE_URL }}

  deploy:
    name: Vercel production deployment
    environment: production
    runs-on: ubuntu-latest
    needs: [pre-build, database, migrations, seed]
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build project artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy project artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --env DATABASE_URL=${{ needs.database.outputs.DATABASE_URL }}
